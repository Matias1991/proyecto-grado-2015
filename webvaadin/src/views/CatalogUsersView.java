package views;

import java.util.ArrayList;
import java.util.Collection;

import org.apache.axis2.AxisFault;
import org.apache.axis2.jaxws.util.CatalogWSDLLocator;

import servicelayer.service.ServiceWebStub.VOUser;
import servicelayer.service.ServiceWebStub;
import servicelayer.service.ServiceWebStub.GetUsers;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Grid;



import controllers.UserController;
import entities.User;

public class CatalogUsersView extends CustomComponent implements View{

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	private Grid catalogUsersGrid;
	private BeanItemContainer<User> beanContainer;

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public CatalogUsersView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		buildGrid();

		// TODO add user code here
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// the main layout and components will be created here
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("682px");
		mainLayout.setHeight("501px");
		
		//top-level component properties
		setWidth("682px");
		setHeight("501px");
		
		/***
		 * BORRAR!!!!!!!
		 */
		catalogUsersGrid = new Grid();
		
		catalogUsersGrid.addColumn("id", Integer.class);
		catalogUsersGrid.addColumn("username", String.class);
		catalogUsersGrid.addColumn("password", String.class);
		catalogUsersGrid.addColumn("name", String.class);
		catalogUsersGrid.addColumn("LastName", String.class);
		catalogUsersGrid.addColumn("Email", String.class);
				
		ServiceWebStub getUsersService;
		
		try{			
			getUsersService = new ServiceWebStub();
			GetUsers getUsers = new GetUsers();			
			VOUser[] catalogUsersAux = getUsersService.getUsers(getUsers).get_return();
					
			
			for (VOUser voUser : catalogUsersAux) {
				catalogUsersGrid.addRow(voUser);
				
			}
		
			 mainLayout.addComponent(catalogUsersGrid);
			 
			 
			 
//		//catalogUsersGrid.setSizeFull();
//		
//		
//		//catalogUsersGrid.setCaption("CAPTION");
//		ServiceWebStub getUsersService;
//		
//		try{			
//			getUsersService = new ServiceWebStub();
//			GetUsers getUsers = new GetUsers();			
//			VOUser[] catalogUsersAux = getUsersService.getUsers(getUsers).get_return();
//			ArrayList <VOUser> catalogUsers = new ArrayList();
//			
//			for(int i = 0; i < catalogUsersAux.length ; i++){
//				catalogUsers.add(catalogUsersAux[i]);				
//			}
//			
//			BeanItemContainer<VOUser> aux = new BeanItemContainer<>(VOUser.class);
//			
//			for (VOUser voUser : catalogUsers) {
//				aux.addBean(voUser);
//				
//			}
//			
//			System.out.println("ACACAC: " + aux.size());
//			//catalogUsersGrid.setContainerDataSource(new BeanItemContainer<>(VOUser.class));			
//			//BeanItemContainer<VOUser> aux = new BeanItemContainer<>(VOUser.class);
//			//aux.addAll(catalogUsers);
//			//catalogUsersGrid.setContainerDataSource(aux);
//			catalogUsersGrid = new Grid(aux);
//			catalogUsersGrid.setSizeFull();
//			
//			 catalogUsersGrid.setColumnOrder("name");
//			 catalogUsersGrid.removeColumn("id");
//			 catalogUsersGrid.removeColumn("password");
//			 
//			 catalogUsersGrid.setSelectionMode(Grid.SelectionMode.SINGLE);
////			 catalogUsersGrid.addSelectionListener(e
////		                -> contactForm.edit((Contact) contactList.getSelectedRow()));
////		        refreshContacts();
////		    }
//			
//			
//			
//			
//			 mainLayout.addComponent(catalogUsersGrid);
//			
			
			
			
			
		}catch (AxisFault e) {
			e.printStackTrace();
		} catch (java.rmi.RemoteException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return mainLayout;
	}
	
	public void buildGrid(){
		Collection<User> users = UserController.GetUsers();
		
		beanContainer = new BeanItemContainer<User>(User.class,users);
		
		catalogUsersGrid = new Grid(beanContainer);
		catalogUsersGrid.setWidth(100, Unit.PERCENTAGE);
		catalogUsersGrid.setHeight(100, Unit.PERCENTAGE);
		//catalogUsersGrid.setSelectionMode(SelectionMode.SINGLE);
		catalogUsersGrid.getSelectedRows().clear();
		mainLayout.addComponent(catalogUsersGrid, "top:30%;left:0px;");
			
	}

	@Override
	public void enter(ViewChangeEvent event) {
		// TODO Auto-generated method stub
		
	}

}
