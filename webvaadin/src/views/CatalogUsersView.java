package views;

import java.util.Collection;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Grid;



import com.vaadin.ui.Grid.SelectionMode;

import controllers.UserController;
import entities.RequestContext;
import entities.User;

public class CatalogUsersView extends BaseView{

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	private Grid catalogUsersGrid;
	private BeanItemContainer<User> beanContainer;

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public CatalogUsersView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		// TODO add user code here
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// the main layout and components will be created here
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("682px");
		mainLayout.setHeight("501px");
		
		//top-level component properties
		setWidth("682px");
		setHeight("501px");				
				
		return mainLayout;
	}
	
	public void buildGrid(){
		Collection<User> users = UserController.GetUsers();
		
		beanContainer = new BeanItemContainer<User>(User.class,users);
		
		catalogUsersGrid = new Grid(beanContainer);
		catalogUsersGrid.setWidth(100, Unit.PERCENTAGE);
		catalogUsersGrid.setHeight(100, Unit.PERCENTAGE);
		catalogUsersGrid.setSelectionMode(SelectionMode.SINGLE);
		catalogUsersGrid.getSelectedRows().clear();
		mainLayout.addComponent(catalogUsersGrid, "top:30%;left:0px;");
			
	}

	@Override
	public void enter(ViewChangeEvent event) {
		// TODO Auto-generated method stub
		super.enter(event);		
		if(RequestContext.getRequestContext() != null){
			buildGrid();
		}
		
	}

}
