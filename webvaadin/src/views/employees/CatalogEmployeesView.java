package views.employees;

import java.util.Collection;

import servicelayer.service.ServiceWebStub.VOSalarySummary;
import views.BaseView;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItem;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.event.SelectionEvent;
import com.vaadin.event.SelectionEvent.SelectionListener;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Grid;
import com.vaadin.ui.Grid.SelectionMode;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.Notification;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.TextField;

import controllers.EmployeeController;
import entities.Employee;
import entities.RequestContext;

public class CatalogEmployeesView extends BaseView {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private TabSheet tabEmployee;
	@AutoGenerated
	private Label lblTitle;
	private Grid catalogEmployeesGrid;
	private BeanItemContainer<Employee> beanContainer;
	private TextField txtEmail;
	private TextField txtAddress;
	private TextField txtCellphone;
	private TextField txtNominalSalary;
	private TextField txtTickets;
	private TextField txtPercentagePersonalFonasaContribution;
	private TextField txtRet;
	private TextField txtIrpf;
	private TextField txtBse;
	private TextField txtHours;
	private TextField txtCostSaleHour;
	private TextField txtPersonalRetirementContribution;
	private TextField txtEmployerRetirementContribution;
	private TextField txtPersonalFrlContribution;
	private TextField txtEmployerFrlContribution;
	private TextField txtPersonalFonasaContribution;
	private TextField txtEmployerFonasaContribution;
	private TextField txtTicketsEmployer;
	private TextField txtTotalDiscounts;
	private TextField txtTotalEmployersContribution;
	private TextField txtNominalWithoutContribution;
	private TextField txtDismisalPrevension;
	private TextField txtIncidenceSalary;
	private TextField txtSalaryToPay;
	private TextField txtCostMonth;
	private TextField txtCostRealHour;
	private Label lblMessage;

	public CatalogEmployeesView() {
		buildMainLayout();
		buildTabSeet();
		setCompositionRoot(mainLayout);
		
		lblMessage = new Label("");
		mainLayout.addComponent(lblMessage, "top:80.0px;left:0.0px;");

	}
		
	public void buildTabSeet(){
		// Email
		txtEmail = new TextField();
		txtEmail.setCaption("Correo electrónico");
		txtEmail.setImmediate(false);
		txtEmail.setWidth("390px");
		txtEmail.setHeight("-1px");
		
		// Direccion
		txtAddress = new TextField();
		txtAddress.setCaption("Dirección");
		txtAddress.setImmediate(false);
		txtAddress.setWidth("390px");
		txtAddress.setHeight("-1px");
		
		//Celular
		txtCellphone = new TextField();
		txtCellphone.setCaption("Celular");
		txtCellphone.setImmediate(false);
		txtCellphone.setWidth("-1px");
		txtCellphone.setHeight("-1px");

		// Sueldo Nominal
		txtNominalSalary = new TextField();
		txtNominalSalary.setCaption("Sueldo Nominal");
		txtNominalSalary.setImmediate(false);
		txtNominalSalary.setWidth("-1px");
		txtNominalSalary.setHeight("-1px");

		// Tickets
		txtTickets = new TextField();
		txtTickets.setCaption("Tickets");
		txtTickets.setImmediate(false);
		txtTickets.setWidth("-1px");
		txtTickets.setHeight("-1px");

		// RET
		txtRet = new TextField();
		txtRet.setCaption("RET");
		txtRet.setImmediate(false);
		txtRet.setWidth("-1px");
		txtRet.setHeight("-1px");

		// IRPF
		txtIrpf = new TextField();
		txtIrpf.setCaption("IRPF");
		txtIrpf.setImmediate(false);
		txtIrpf.setWidth("-1px");
		txtIrpf.setHeight("-1px");

		// BSE
		txtBse = new TextField();
		txtBse.setCaption("BSE");
		txtBse.setImmediate(false);
		txtBse.setWidth("-1px");
		txtBse.setHeight("-1px");

		// Horas mensuales
		txtHours = new TextField();
		txtHours.setCaption("Cantidad Horas Mensual");
		txtHours.setImmediate(false);
		txtHours.setWidth("-1px");
		txtHours.setHeight("-1px");

		// Precio de venta por hora
		txtCostSaleHour = new TextField();
		txtCostSaleHour.setCaption("Hora Venta");
		txtCostSaleHour.setImmediate(false);
		txtCostSaleHour.setWidth("-1px");
		txtCostSaleHour.setHeight("-1px");

		// Porcentaje aporte FONASA Personal
		txtPercentagePersonalFonasaContribution = new TextField();
		txtPercentagePersonalFonasaContribution
				.setCaption("% Aporte FONASA Personal");
		txtPercentagePersonalFonasaContribution.setImmediate(false);
		txtPercentagePersonalFonasaContribution.setWidth("-1px");
		txtPercentagePersonalFonasaContribution.setHeight("-1px");

		// Aporte Jubilatorio Personal
		txtPersonalRetirementContribution = new TextField();
		txtPersonalRetirementContribution
				.setCaption("Aporte Jubilatorio Personal");
		txtPersonalRetirementContribution.setImmediate(false);
		txtPersonalRetirementContribution.setWidth("-1px");
		txtPersonalRetirementContribution.setHeight("-1px");

		// Aporte Jubilatorio Patronal
		txtEmployerRetirementContribution = new TextField();
		txtEmployerRetirementContribution
				.setCaption("Aporte Jubilatorio Patronal");
		txtEmployerRetirementContribution.setImmediate(false);
		txtEmployerRetirementContribution.setWidth("-1px");
		txtEmployerRetirementContribution.setHeight("-1px");

		// Aporte FRL Personal
		txtPersonalFrlContribution = new TextField();
		txtPersonalFrlContribution.setCaption("Aporte FRL Personal");
		txtPersonalFrlContribution.setImmediate(false);
		txtPersonalFrlContribution.setWidth("-1px");
		txtPersonalFrlContribution.setHeight("-1px");

		// Aporte FRL Patronal
		txtEmployerFrlContribution = new TextField();
		txtEmployerFrlContribution.setCaption("Aporte FRL Patronal");
		txtEmployerFrlContribution.setImmediate(false);
		txtEmployerFrlContribution.setWidth("-1px");
		txtEmployerFrlContribution.setHeight("-1px");

		// Aporte FONASA Personal
		txtPersonalFonasaContribution = new TextField();
		txtPersonalFonasaContribution.setCaption("Aporte FONASA Personal");
		txtPersonalFonasaContribution.setImmediate(false);
		txtPersonalFonasaContribution.setWidth("-1px");
		txtPersonalFonasaContribution.setHeight("-1px");

		// Aporte FONASA Patronal
		txtEmployerFonasaContribution = new TextField();
		txtEmployerFonasaContribution.setCaption("Aporte FONASA Patronal");
		txtEmployerFonasaContribution.setImmediate(false);
		txtEmployerFonasaContribution.setWidth("-1px");
		txtEmployerFonasaContribution.setHeight("-1px");

		// Tickets Patronal
		txtTicketsEmployer = new TextField();
		txtTicketsEmployer.setCaption("Tickets Patronal");
		txtTicketsEmployer.setImmediate(false);
		txtTicketsEmployer.setWidth("-1px");
		txtTicketsEmployer.setHeight("-1px");

		// Total Descuentos
		txtTotalDiscounts = new TextField();
		txtTotalDiscounts.setCaption("Total Descuentos");
		txtTotalDiscounts.setImmediate(false);
		txtTotalDiscounts.setWidth("-1px");
		txtTotalDiscounts.setHeight("-1px");

		// Total Aportes Patronales
		txtTotalEmployersContribution = new TextField();
		txtTotalEmployersContribution.setCaption("Total Aportes Patronales");
		txtTotalEmployersContribution.setImmediate(false);
		txtTotalEmployersContribution.setWidth("-1px");
		txtTotalEmployersContribution.setHeight("-1px");

		// Nominal Sin Aportes
		txtNominalWithoutContribution = new TextField();
		txtNominalWithoutContribution.setCaption("Nominal Sin Aportes");
		txtNominalWithoutContribution.setImmediate(false);
		txtNominalWithoutContribution.setWidth("-1px");
		txtNominalWithoutContribution.setHeight("-1px");

		// Prevision Despido
		txtDismisalPrevension = new TextField();
		txtDismisalPrevension.setCaption("Prevision Despido");
		txtDismisalPrevension.setImmediate(false);
		txtDismisalPrevension.setWidth("-1px");
		txtDismisalPrevension.setHeight("-1px");

		// Incidencia Sueldo
		txtIncidenceSalary = new TextField();
		txtIncidenceSalary.setCaption("Incidencia Sueldo");
		txtIncidenceSalary.setImmediate(false);
		txtIncidenceSalary.setWidth("-1px");
		txtIncidenceSalary.setHeight("-1px");

		// Sueldos a Pagar
		txtSalaryToPay = new TextField();
		txtSalaryToPay.setCaption("Sueldos A Pagar");
		txtSalaryToPay.setImmediate(false);
		txtSalaryToPay.setWidth("-1px");
		txtSalaryToPay.setHeight("-1px");

		// Costo Mensual
		txtCostMonth = new TextField();
		txtCostMonth.setCaption("Costo Mensual");
		txtCostMonth.setImmediate(false);
		txtCostMonth.setWidth("-1px");
		txtCostMonth.setHeight("-1px");

		// Costo Hora Meerkat
		txtCostRealHour = new TextField();
		txtCostRealHour.setCaption("Costo Hora Meerkat");
		txtCostRealHour.setImmediate(false);
		txtCostRealHour.setWidth("-1px");
		txtCostRealHour.setHeight("-1px");

		// TAB 1
		GridLayout tab1 = new GridLayout(2, 5);
		tab1.setSpacing(true);
		tab1.addComponent(txtAddress, 0, 0,1,0);
		tab1.addComponent(txtEmail, 0, 1,1,1);
		tab1.addComponent(txtCellphone,0,2);
		tabEmployee.addTab(tab1, "Datos personales");
		
		// TAB 2
		GridLayout tab2 = new GridLayout(2, 5);
		tab2.setSpacing(true);
		tab2.addComponent(txtNominalSalary, 0, 0);
		tab2.addComponent(txtTickets, 1, 0);
		tab2.addComponent(txtPercentagePersonalFonasaContribution, 0, 1);
		tab2.addComponent(txtRet, 1, 1);
		tab2.addComponent(txtIrpf, 0, 2);
		tab2.addComponent(txtBse, 1, 2);
		tab2.addComponent(txtHours, 0, 3);
		tab2.addComponent(txtCostSaleHour, 1, 3);
		tabEmployee.addTab(tab2, "Costos 1");
		
		//TAB 2
		GridLayout tab3 = new GridLayout(2,4);
		tab3.setSpacing(true);
		tab3.addComponent(txtPersonalRetirementContribution,0,0);
		tab3.addComponent(txtEmployerRetirementContribution,1,0);
		tab3.addComponent(txtPersonalFrlContribution,0,1);
		tab3.addComponent(txtEmployerFrlContribution,1,1);
		tab3.addComponent(txtPersonalFonasaContribution,0,2);
		tab3.addComponent(txtEmployerFonasaContribution,1,2);
		tab3.addComponent(txtTicketsEmployer,0,3);
		tab3.addComponent(txtTotalDiscounts,1,3);
		tabEmployee.addTab(tab3, "Costos 2");
		
		
		//tab4
		GridLayout tab4 = new GridLayout(2,4);
		tab4.setSpacing(true);
		tab4.addComponent(txtTotalEmployersContribution,0,0);
		tab4.addComponent(txtNominalWithoutContribution,1,0);		
		tab4.addComponent(txtIncidenceSalary,0,1);
		tab4.addComponent(txtDismisalPrevension,1,1);		
		tab4.addComponent(txtCostMonth,0,2);
		tab4.addComponent(txtCostRealHour,1,2);
		tab4.addComponent(txtSalaryToPay,0,3);		
		tabEmployee.addTab(tab4, "Costos 3");
		
		tabEmployee.setVisible(false);
	}
	
	public void buildGrid() {
		Collection<Employee> employees = EmployeeController.GetEmployees();

		if (employees != null && employees.size() > 0) {
			beanContainer = new BeanItemContainer<Employee>(Employee.class,employees);

			catalogEmployeesGrid = new Grid(beanContainer);
			catalogEmployeesGrid.removeColumn("id");
			catalogEmployeesGrid.removeColumn("updatedDateTimeUTC");
			catalogEmployeesGrid.removeColumn("createdDateTimeUTC");
			catalogEmployeesGrid.removeColumn("employedType");
			catalogEmployeesGrid.removeColumn("user");
			catalogEmployeesGrid.removeColumn("voSalarySummary");
			catalogEmployeesGrid.removeColumn("voSalarySummaries");
			catalogEmployeesGrid.removeColumn("email");
			catalogEmployeesGrid.removeColumn("address");
			catalogEmployeesGrid.removeColumn("cellPhone");

			catalogEmployeesGrid.setColumnOrder("name", "lastName");

			catalogEmployeesGrid.getColumn("name").setHeaderCaption("Nombre");
			catalogEmployeesGrid.getColumn("lastName").setHeaderCaption("Apellido");
			//catalogEmployeesGrid.getColumn("cellPhone").setHeaderCaption("Celular");
			catalogEmployeesGrid.setWidth(373, Unit.PIXELS);
			catalogEmployeesGrid.setHeight(300, Unit.PIXELS);
			catalogEmployeesGrid.setSelectionMode(SelectionMode.SINGLE);
			catalogEmployeesGrid.getSelectedRows().clear();
			mainLayout.addComponent(catalogEmployeesGrid, "top:20%;left:0.0px;");
			
			catalogEmployeesGrid.addSelectionListener(new SelectionListener() {

				@Override
				public void select(SelectionEvent event) {
					
					BeanItem<Employee> item = beanContainer.getItem(catalogEmployeesGrid.getSelectedRow());
					if(item != null){
						Employee selectedEmployee = item.getBean();
						loadEmployee(selectedEmployee);
						tabEmployee.setVisible(true);
					}
					
				}
				
			});
		} else {
			lblMessage.setValue("No hay empleados para mostrar");
			if(catalogEmployeesGrid != null){
				catalogEmployeesGrid.setVisible(false);
			}
		}

	}
	
	private void setReadOnlyTxt (boolean readOnly){
		txtEmail.setReadOnly(readOnly);
		txtAddress.setReadOnly(readOnly);
		txtNominalSalary.setReadOnly(readOnly);
		txtTickets.setReadOnly(readOnly);
		txtRet.setReadOnly(readOnly);
		txtIrpf.setReadOnly(readOnly);
		txtBse.setReadOnly(readOnly);
		txtHours.setReadOnly(readOnly);
		txtCostSaleHour.setReadOnly(readOnly);
		txtPercentagePersonalFonasaContribution.setReadOnly(readOnly);
		txtPersonalRetirementContribution.setReadOnly(readOnly);
		txtEmployerRetirementContribution.setReadOnly(readOnly);
		txtPersonalFrlContribution.setReadOnly(readOnly);
		txtEmployerFrlContribution.setReadOnly(readOnly);
		txtPersonalFonasaContribution.setReadOnly(readOnly);
		txtEmployerFonasaContribution.setReadOnly(readOnly);
		txtTicketsEmployer.setReadOnly(readOnly);
		txtTotalDiscounts.setReadOnly(readOnly);
		txtTotalEmployersContribution.setReadOnly(readOnly);
		txtNominalWithoutContribution.setReadOnly(readOnly);
		txtDismisalPrevension.setReadOnly(readOnly);
		txtIncidenceSalary.setReadOnly(readOnly);
		txtSalaryToPay.setReadOnly(readOnly);
		txtCostMonth.setReadOnly(readOnly);
		txtCostRealHour.setReadOnly(readOnly);	
		txtCellphone.setReadOnly(readOnly);
	}
	
	public void loadEmployee (Employee selectedEmployee){

		// seteo en readonly false, para poder cargar los datos
		setReadOnlyTxt(false);
		
		VOSalarySummary voSalarySummaty = selectedEmployee.getVoSalarySummary();
		txtAddress.setValue(selectedEmployee.getAddress());
		txtEmail.setValue(selectedEmployee.getEmail());
		String aux = Double.toString(voSalarySummaty.getNominalSalary());
		if(!aux.isEmpty()){
			txtNominalSalary.setValue(aux);	
		}
		aux = Double.toString(voSalarySummaty.getTickets());
		if(!aux.isEmpty()){
			txtTickets.setValue(aux);	
		}
		
		aux = Double.toString(voSalarySummaty.getPersonalFONASAContribution());
		if(!aux.isEmpty()){
			txtPercentagePersonalFonasaContribution.setValue(aux);	
		}
		
		aux = Double.toString(voSalarySummaty.getRET());
		if(!aux.isEmpty()){
			txtRet.setValue(aux);	
		}

		aux = Double.toString(voSalarySummaty.getIRPF());
		if(!aux.isEmpty()){
			txtIrpf.setValue(aux);	
		}
		txtBse.setValue(Double.toString(voSalarySummaty.getBSE()));
		txtHours.setValue(Double.toString(voSalarySummaty.getHours()));
		txtCostSaleHour.setValue(Double.toString(voSalarySummaty.getCostSaleHour()));
		txtPersonalRetirementContribution.setValue(Double.toString(voSalarySummaty.getPersonalRetirementContribution()));
		txtPersonalFrlContribution.setValue(Double.toString(voSalarySummaty.getPersonalFRLContribution()));
		txtEmployerFrlContribution.setValue(Double.toString(voSalarySummaty.getEmployersFRLContribution()));
		txtPersonalFonasaContribution.setValue(Double.toString(voSalarySummaty.getPersonalFONASAContribution()));
		txtEmployerFonasaContribution.setValue(Double.toString(voSalarySummaty.getEmployersFONASAContribution()));
		txtTicketsEmployer.setValue(Double.toString(voSalarySummaty.getTicketsEmployers()));
		txtTotalDiscounts.setValue(Double.toString(voSalarySummaty.getTotalDiscounts()));
		txtTotalEmployersContribution.setValue(Double.toString(voSalarySummaty.getTotalEmployerContributions()));
		txtNominalWithoutContribution.setValue(Double.toString(voSalarySummaty.getNominalWithoutContributions()));
		txtDismisalPrevension.setValue(Double.toString(voSalarySummaty.getDismissalPrevention()));
		txtIncidenceSalary.setValue(Double.toString(voSalarySummaty.getIncidenceSalary()));
		txtSalaryToPay.setValue(Double.toString(voSalarySummaty.getSalaryToPay()));
		txtCostMonth.setValue(Double.toString(voSalarySummaty.getCostMonth()));
		txtCostRealHour.setValue(Double.toString(voSalarySummaty.getCostRealHour()));			

		//seteo en readonly false los campos del empleado a mostrar
		setReadOnlyTxt(true);
		
	}
	
	@Override
	public void enter(ViewChangeEvent event) {
		super.enter(event);
		if (RequestContext.getRequestContext() != null) {
			buildGrid();
		}

	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("1083px");
		mainLayout.setHeight("500px");

		// top-level component properties
		setWidth("682px");
		setHeight("501px");

		// lblTitle
		lblTitle = new Label();
		lblTitle.setStyleName("titleLabel");
		lblTitle.setImmediate(false);
		lblTitle.setWidth("-1px");
		lblTitle.setHeight("-1px");
		lblTitle.setValue("Catálogo de empleados");
		mainLayout.addComponent(lblTitle, "top:42.0px;left:0.0px;");

		// tabEmployee
		tabEmployee = new TabSheet();
		tabEmployee.setCaption("Datos del empleado");
		tabEmployee.setImmediate(false);
		tabEmployee.setWidth("-1px");
		tabEmployee.setHeight("-1px");
		mainLayout.addComponent(tabEmployee, "top:80.0px;left:400.0px;");

		return mainLayout;
	}

}
