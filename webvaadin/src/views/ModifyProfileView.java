package views;

import java.rmi.RemoteException;

import org.apache.axis2.AxisFault;

import servicelayer.service.ServiceWebStub;
import servicelayer.service.ServiceWebStub.GetUser;
import servicelayer.service.ServiceWebStub.GetUserResponse;
import servicelayer.service.ServiceWebStub.UpdateUser;
import servicelayer.service.ServiceWebStub.VOUser;

import com.example.webvaadin.WebvaadinUI;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.Notification;
import com.vaadin.ui.TextField;
import com.vaadin.ui.Button.ClickEvent;

import entities.RequestContext;

public class ModifyProfileView extends CustomComponent implements View {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Button btn_cancel;
	@AutoGenerated
	private Button btn_modify;
	@AutoGenerated
	private Label label_2;
	@AutoGenerated
	private TextField txt_email;
	@AutoGenerated
	private TextField txt_lastName;
	@AutoGenerated
	private TextField txt_name;
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	public ModifyProfileView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		ServiceWebStub uploadUser;
		try {
			uploadUser = new ServiceWebStub();
			GetUser user = new GetUser();
//			if(RequestContext.getRequestContext() == null){
//				user.setId(RequestContext.getRequestContext().getId());
//			}
			
			GetUserResponse userFromBase = uploadUser.getUser(user);

			final VOUser userToShow = userFromBase.get_return();

			txt_name.setValue(userToShow.getName());
			txt_lastName.setValue(userToShow.getLastName());
			txt_email.setValue(userToShow.getEmail());

			btn_modify.addClickListener(new Button.ClickListener() {

				@Override
				public void buttonClick(ClickEvent event) {
					ServiceWebStub modifyProfileService;
					try {
						modifyProfileService = new ServiceWebStub();

						UpdateUser modifyProfile = new UpdateUser();
						VOUser voUser = new VOUser();
						voUser.setEmail(txt_email.getValue());
						voUser.setLastName(txt_lastName.getValue());
						voUser.setName(txt_name.getValue());
						voUser.setUserType(userToShow.getUserType());
						modifyProfile.setVoUser(voUser);
						// harcode hasta que no tengamos el contexto
						modifyProfile.setId(1);
						modifyProfileService.updateUser(modifyProfile);

						Notification.show("Aviso: ",
								"Usuario modificado correctamente",
								Notification.TYPE_HUMANIZED_MESSAGE);
						getUI().getNavigator().navigateTo(WebvaadinUI.MAINMENU);
					} catch (AxisFault e) {
						e.printStackTrace();
					} catch (java.rmi.RemoteException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
			});

		} catch (AxisFault e1) {
			// TODO
		} catch (RemoteException e1) {
			// TODO
		}

		btn_cancel.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				getUI().getNavigator().navigateTo(WebvaadinUI.MAINMENU);

			}
		});

	}

	@Override
	public void enter(ViewChangeEvent event) {
		WebvaadinUI.changeToMainMenu();
	}

	public boolean validateCreateUser() {
		boolean validate = true;
		String errors = "";

		String name = txt_name.getValue();
		// if (StringUtils.isBlank(name)) {
		if (name.isEmpty()) {
			validate = false;
			errors += "El nombre no puede ser vacio\n";
		}

		String lastName = txt_lastName.getValue();
		// if (StringUtils.isBlank(lastName)) {
		if (lastName.isEmpty()) {
			validate = false;
			errors += "El apellido no puede ser vacio\n";
		}

		String email = txt_email.getValue();
		// if (StringUtils.isBlank(email)) {
		if (email.isEmpty()) {
			validate = false;
			errors += "El email no puede ser vacio\n";
		}

		Notification.show(errors, Notification.TYPE_ERROR_MESSAGE);
		return validate;
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("360px");
		mainLayout.setHeight("501px");
		
		// top-level component properties
		setWidth("360px");
		setHeight("501px");
		
		// txt_name
		txt_name = new TextField();
		txt_name.setCaption("Nombre");
		txt_name.setImmediate(false);
		txt_name.setWidth("240px");
		txt_name.setHeight("-1px");
		txt_name.setTabIndex(1);
		txt_name.setRequired(true);
		mainLayout.addComponent(txt_name, "top:120.0px;left:0.0px;");
		
		// txt_lastName
		txt_lastName = new TextField();
		txt_lastName.setCaption("Apellido");
		txt_lastName.setImmediate(false);
		txt_lastName.setWidth("241px");
		txt_lastName.setHeight("-1px");
		txt_lastName.setTabIndex(2);
		txt_lastName.setRequired(true);
		txt_lastName.setNullSettingAllowed(true);
		mainLayout.addComponent(txt_lastName, "top:180.0px;left:0.0px;");
		
		// txt_email
		txt_email = new TextField();
		txt_email.setCaption("Email");
		txt_email.setImmediate(false);
		txt_email.setWidth("240px");
		txt_email.setHeight("-1px");
		txt_email.setTabIndex(3);
		txt_email.setRequired(true);
		mainLayout.addComponent(txt_email, "top:240.0px;left:0.0px;");
		
		// label_2
		label_2 = new Label();
		label_2.setImmediate(false);
		label_2.setWidth("-1px");
		label_2.setHeight("-1px");
		label_2.setValue("Modificar usuario");
		mainLayout.addComponent(label_2, "top:62.0px;left:0.0px;");
		
		// btn_modify
		btn_modify = new Button();
		btn_modify.setCaption("Modificar");
		btn_modify.setImmediate(true);
		btn_modify.setWidth("101px");
		btn_modify.setHeight("-1px");
		btn_modify.setTabIndex(4);
		mainLayout.addComponent(btn_modify, "top:300.0px;left:0.0px;");
		
		// btn_cancel
		btn_cancel = new Button();
		btn_cancel.setCaption("Cancelar");
		btn_cancel.setImmediate(true);
		btn_cancel.setWidth("100px");
		btn_cancel.setHeight("-1px");
		btn_cancel.setTabIndex(5);
		mainLayout.addComponent(btn_cancel, "top:300.0px;left:140.0px;");
		
		return mainLayout;
	}

}
