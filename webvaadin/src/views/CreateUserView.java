package views;

import org.apache.axis2.AxisFault;

import servicelayer.service.ServiceWebStub;
import servicelayer.service.ServiceWebStub.InsertUser;
import servicelayer.service.ServiceWebStub.VOUser;

import com.example.webvaadin.WebvaadinUI;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.server.Page;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.Notification;
import com.vaadin.ui.OptionGroup;
import com.vaadin.ui.TextField;
import com.vaadin.ui.themes.Reindeer;

import controllers.UserController;
import entities.RequestContext;

public class CreateUserView extends BaseView implements View {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private OptionGroup userType;
	@AutoGenerated
	private Button btnCancel;
	@AutoGenerated
	private Button btnAdd;
	@AutoGenerated
	private Label lblTitle;
	@AutoGenerated
	private TextField txtUserName;
	@AutoGenerated
	private TextField txtEmail;
	@AutoGenerated
	private TextField txtCreateLastName;
	@AutoGenerated
	private TextField txtName;

	public CreateUserView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		btnAdd.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {

				if (validateCreateUser()) {

					// Creo el ValueObjet cargandolo con los datos carados por
					// el usuario
					VOUser newUser = new VOUser();
					newUser.setUserName(txtUserName.getValue());
					newUser.setName(txtName.getValue());
					newUser.setLastName(txtCreateLastName.getValue());
					newUser.setEmail(txtEmail.getValue());
					if (userType.getValue().equals("Socio")) {
						newUser.setUserType(2);
					} else {
						newUser.setUserType(3);
					}
					// la contrasenia por defecto es el mismo que el nombre de
					// usuario
					newUser.setPassword(txtUserName.getValue());

					if (UserController.createUser(newUser)) {
						Notification notif = new Notification("Aviso: ", "Usuario creado correctamente", Notification.TYPE_ERROR_MESSAGE);
						notif.setDelayMsec(2000);
						notif.show(Page.getCurrent());
						// limpio los campos
						txtName.setValue("");
						txtEmail.setValue("");
						txtUserName.setValue("");
						txtCreateLastName.setValue("");
						userType.setValue("");
					} 
				}
			}
		});

		btnCancel.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				getUI().getNavigator().navigateTo(WebvaadinUI.MAINMENU);
			}
		});

	}

	@Override
	public void enter(ViewChangeEvent event) {
		super.enter(event);
	}

	public boolean validateCreateUser() {
		boolean validate = true;
		String errors = "";

		String userName = txtUserName.getValue();
		if (userName.isEmpty()) {
			validate = false;
			errors += "Debes ingresar el nombre de usuario\n";
		}

		String name = txtName.getValue();
		if (name.isEmpty()) {
			validate = false;
			errors += "Debes ingresar el nombre\n";
		}

		String lastName = txtCreateLastName.getValue();
		if (lastName.isEmpty()) {
			validate = false;
			errors += "Debes ingresar el apellido\n";
		}

		String email = txtEmail.getValue();
		if (email.isEmpty()) {
			validate = false;
			errors += "Debes ingresar el correo electrónico\n";
		}
		
		if (!validate) {
			Notification notif = new Notification(errors,
					Notification.TYPE_ERROR_MESSAGE);
			notif.setDelayMsec(2000);
			notif.show(Page.getCurrent());
		}
		return validate;
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("360px");
		mainLayout.setHeight("501px");

		// top-level component properties
		setWidth("360px");
		setHeight("501px");

		// txt_name
		txtName = new TextField();
		txtName.setCaption("Nombre");
		txtName.setImmediate(false);
		txtName.setTabIndex(1);
		txtName.setWidth("240px");
		txtName.setHeight("-1px");
		txtName.setRequired(true);
		mainLayout.addComponent(txtName, "top:120.0px;left:0.0px;");

		// txt_createLastName
		txtCreateLastName = new TextField();
		txtCreateLastName.setCaption("Apellido");
		txtCreateLastName.setImmediate(false);
		txtCreateLastName.setWidth("241px");
		txtCreateLastName.setHeight("-1px");
		txtCreateLastName.setTabIndex(2);
		txtCreateLastName.setRequired(true);
		txtCreateLastName.setNullSettingAllowed(true);
		mainLayout.addComponent(txtCreateLastName, "top:180.0px;left:0.0px;");

		// txt_email
		txtEmail = new TextField();
		txtEmail.setCaption("Correo electrónico");
		txtEmail.setImmediate(false);
		txtEmail.setWidth("240px");
		txtEmail.setHeight("-1px");
		txtEmail.setTabIndex(3);
		txtEmail.setRequired(true);
		mainLayout.addComponent(txtEmail, "top:240.0px;left:0.0px;");

		// txt_userName
		txtUserName = new TextField();
		txtUserName.setCaption("Nombre de usuario");
		txtUserName.setImmediate(false);
		txtUserName.setWidth("240px");
		txtUserName.setHeight("-1px");
		txtUserName.setTabIndex(4);
		txtUserName.setRequired(true);
		mainLayout.addComponent(txtUserName, "top:300.0px;left:0.0px;");

		// label_2
		lblTitle = new Label();
		lblTitle.setImmediate(false);
		lblTitle.setWidth("-1px");
		lblTitle.setHeight("-1px");
		lblTitle.setValue("Crear usuario");
		lblTitle.setStyleName(Reindeer.LABEL_H2);
		mainLayout.addComponent(lblTitle, "top:42.0px;left:0.0px;");

		// btn_add
		btnAdd = new Button();
		btnAdd.setCaption("Crear");
		btnAdd.setImmediate(true);
		btnAdd.setWidth("101px");
		btnAdd.setHeight("-1px");
		btnAdd.setTabIndex(6);
		mainLayout.addComponent(btnAdd, "top:440.0px;left:0.0px;");

		// btn_cancel
		btnCancel = new Button();
		btnCancel.setCaption("Cancelar");
		btnCancel.setImmediate(true);
		btnCancel.setWidth("100px");
		btnCancel.setHeight("-1px");
		btnCancel.setTabIndex(7);
		mainLayout.addComponent(btnCancel, "top:440.0px;left:139.0px;");

		// userType
		userType = new OptionGroup();
		userType.setCaption("Tipo de usuario");
		userType.setImmediate(false);
		userType.setWidth("-1px");
		userType.setHeight("-1px");
		userType.addItems("Socio", "Gerente");
		//cargo por defecto Socio
		userType.select("Socio");
		userType.setTabIndex(5);
		mainLayout.addComponent(userType, "top:360.0px;left:0.0px;");

		return mainLayout;
	}

}
