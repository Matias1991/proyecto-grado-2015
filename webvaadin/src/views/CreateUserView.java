package views;

import org.apache.axis2.AxisFault;

import servicelayer.service.ServiceWebStub;
import servicelayer.service.ServiceWebStub.InsertUser;
import servicelayer.service.ServiceWebStub.VOUser;

import com.example.webvaadin.WebvaadinUI;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.Notification;
import com.vaadin.ui.OptionGroup;
import com.vaadin.ui.TextField;
import com.vaadin.ui.themes.Reindeer;

public class CreateUserView extends CustomComponent implements View {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private OptionGroup userType;
	@AutoGenerated
	private Button btn_cancel;
	@AutoGenerated
	private Button btn_add;
	@AutoGenerated
	private Label lbl_title;
	@AutoGenerated
	private TextField txt_userName;
	@AutoGenerated
	private TextField txt_email;
	@AutoGenerated
	private TextField txt_createLastName;
	@AutoGenerated
	private TextField txt_name;
	public CreateUserView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		btn_add.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				ServiceWebStub createUserService;
//				if (validateCreateUser()) {
					try {
						createUserService = new ServiceWebStub();

						InsertUser createUser = new InsertUser();
						// Creo el ValueObjet cargandolo con los datos carados
						// por
						// el usuario
						VOUser newUser = new VOUser();
						newUser.setUserName(txt_userName.getValue());
						newUser.setName(txt_name.getValue());
						newUser.setLastName(txt_createLastName.getValue());
						newUser.setEmail(txt_email.getValue());
						if (userType.getValue().equals("Socio")) {
							newUser.setUserType(2);
						} else {
							newUser.setUserType(3);
						}
						// la contrasenia por defecto es el mismo que el nombre
						// de
						// usuario
						newUser.setPassword(txt_userName.getValue());
						createUser.setVoUser(newUser);

						if (createUserService.insertUser(createUser)
								.get_return()) {
							Notification.show("Aviso: ", "Usuario creado correctamente",
									Notification.TYPE_HUMANIZED_MESSAGE);
							getUI().getNavigator().navigateTo(WebvaadinUI.MAINMENU);
						} else {
							Notification.show("Aviso: ", "Usuario no creado",
									Notification.TYPE_ERROR_MESSAGE);
						}

					} catch (AxisFault e) {
						e.printStackTrace();
					} catch (java.rmi.RemoteException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}

//			}
		});

		btn_cancel.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				getUI().getNavigator().navigateTo(WebvaadinUI.MAINMENU);

			}
		});

	}

	@Override
	public void enter(ViewChangeEvent event) {

	}

	public boolean validateCreateUser() {
		boolean validate = true;
		String errors = "";

		String userName = txt_userName.getValue();
		// if (StringUtils.isBlank(userName)) {
		if (userName.isEmpty()) {
			validate = false;
			errors += "El nombre de usuario no puede ser vacio\n";
		}

		String name = txt_name.getValue();
		// if (StringUtils.isBlank(name)) {
		if (name.isEmpty()) {
			validate = false;
			errors += "El nombre no puede ser vacio\n";
		}

		String lastName = txt_createLastName.getValue();
		// if (StringUtils.isBlank(lastName)) {
		if (lastName.isEmpty()) {
			validate = false;
			errors += "El apellido no puede ser vacio\n";
		}

		String email = txt_email.getValue();
		// if (StringUtils.isBlank(email)) {
		if (email.isEmpty()) {
			validate = false;
			errors += "El email no puede ser vacio\n";
		}

		// if (StringUtils.isBlank(userType.getValue().toString())) {
		if (userType.getValue().toString().isEmpty()) {
			validate = false;
			errors += "El tipo de usuario no puede ser vacio\n";
		}

		Notification.show(errors, Notification.TYPE_ERROR_MESSAGE);
		return validate;
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("360px");
		mainLayout.setHeight("501px");
		
		// top-level component properties
		setWidth("360px");
		setHeight("501px");
		
		// txt_name
		txt_name = new TextField();
		txt_name.setCaption("Nombre");
		txt_name.setImmediate(false);
		txt_name.setWidth("240px");
		txt_name.setHeight("-1px");
		txt_name.setRequired(true);
		mainLayout.addComponent(txt_name, "top:120.0px;left:0.0px;");
		
		// txt_createLastName
		txt_createLastName = new TextField();
		txt_createLastName.setCaption("Apellido");
		txt_createLastName.setImmediate(false);
		txt_createLastName.setWidth("241px");
		txt_createLastName.setHeight("-1px");
		txt_createLastName.setTabIndex(1);
		txt_createLastName.setRequired(true);
		txt_createLastName.setNullSettingAllowed(true);
		mainLayout.addComponent(txt_createLastName, "top:180.0px;left:0.0px;");
		
		// txt_email
		txt_email = new TextField();
		txt_email.setCaption("Email");
		txt_email.setImmediate(false);
		txt_email.setWidth("240px");
		txt_email.setHeight("-1px");
		txt_email.setTabIndex(2);
		txt_email.setRequired(true);
		mainLayout.addComponent(txt_email, "top:240.0px;left:0.0px;");
		
		// txt_userName
		txt_userName = new TextField();
		txt_userName.setCaption("Nombre de usuario");
		txt_userName.setImmediate(false);
		txt_userName.setWidth("240px");
		txt_userName.setHeight("-1px");
		txt_userName.setTabIndex(3);
		txt_userName.setRequired(true);
		mainLayout.addComponent(txt_userName, "top:300.0px;left:0.0px;");
		
		// label_2
		lbl_title = new Label();
		lbl_title.setImmediate(false);
		lbl_title.setWidth("-1px");
		lbl_title.setHeight("-1px");
		lbl_title.setValue("Crear usuario");
		lbl_title.setStyleName(Reindeer.LABEL_H2);
		mainLayout.addComponent(lbl_title, "top:42.0px;left:0.0px;");
		
		// btn_add
		btn_add = new Button();
		btn_add.setCaption("Crear");
		btn_add.setImmediate(true);
		btn_add.setWidth("101px");
		btn_add.setHeight("-1px");
		btn_add.setTabIndex(6);
		mainLayout.addComponent(btn_add, "top:440.0px;left:0.0px;");
		
		// btn_cancel
		btn_cancel = new Button();
		btn_cancel.setCaption("Cancelar");
		btn_cancel.setImmediate(true);
		btn_cancel.setWidth("100px");
		btn_cancel.setHeight("-1px");
		btn_cancel.setTabIndex(7);
		mainLayout.addComponent(btn_cancel, "top:440.0px;left:139.0px;");
		
		// userType
		userType = new OptionGroup();
		userType.setCaption("Tipo de usuario");
		userType.setImmediate(false);
		userType.setWidth("-1px");
		userType.setHeight("-1px");
		userType.addItems("Socio", "Gerente");
		mainLayout.addComponent(userType, "top:360.0px;left:0.0px;");
		
		return mainLayout;
	}

}
