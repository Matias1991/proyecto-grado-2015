package views.bill;

import java.util.Collection;
import java.util.Date;

import utils.PopupWindow;
import views.BaseView;

import com.example.webvaadin.WebvaadinUI;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.data.util.converter.StringToDoubleConverter;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.shared.ui.datefield.Resolution;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.ComboBox;
import com.vaadin.ui.Label;
import com.vaadin.ui.PopupDateField;
import com.vaadin.ui.TextField;

import controllers.BillController;
import controllers.ProjectController;
import entities.Bill;
import entities.Project;
import entities.RequestContext;

public class CreateBillView extends BaseView {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	private static final long serialVersionUID = 1L;
	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private ComboBox cboxProject;
	@AutoGenerated
	private TextField txtAmount;
	@AutoGenerated
	private TextField txtDescription;
	@AutoGenerated
	private Button btnCancel;
	@AutoGenerated
	private Button btnCreate;
	@AutoGenerated
	private PopupDateField popupDateFieldAppliedDate;
	@AutoGenerated
	private Label lblTitle;
	@AutoGenerated
	private TextField txtCode;
	private BeanItemContainer<Project> beanContainer;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public CreateBillView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		
		btnCreate.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				btnCreate.setEnabled(false);
				txtDescription.setValidationVisible(true);
				txtAmount.setValidationVisible(true);
				txtCode.setValidationVisible(true);
				cboxProject.setValidationVisible(true);
				
				if(!txtAmount.isValid() || !txtDescription.isValid() || !txtCode.isValid() || !popupDateFieldAppliedDate.isValid() || !cboxProject.isValid()){
					txtAmount.setRequiredError("Es requerido");
					txtDescription.setRequiredError("Es requerido");
					txtAmount.setConversionError("Debe ser numérico");
					popupDateFieldAppliedDate.setRequiredError("Es requerido");
					txtCode.setRequiredError("Es requerido");
					cboxProject.setRequiredError("Es requerido");
				}
				else
				{
					Bill bill = new Bill();
					bill.setCode(txtCode.getValue());
					bill.setDescription(txtDescription.getValue());
					bill.setAmount((Double)(txtAmount.getConvertedValue()));
					bill.setProjectId(Integer.parseInt(cboxProject.getValue().toString()));
					bill.setAppliedDateTimeUTC(popupDateFieldAppliedDate.getValue());
					
					boolean result = BillController.createBill(bill);
					
					if(result)
					{
						new PopupWindow("AVISO", "Factura creada correctamente");
						
						cleanInputs();
					}
				}
				
				btnCreate.setEnabled(true);
			}
		
		});
		
		btnCancel.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				getUI().getNavigator().navigateTo(WebvaadinUI.MAINMENU);
			}
		});
		// TODO add user code here
	}
	
	@Override
	public void enter(ViewChangeEvent event) {
		super.enter(event);
		if(RequestContext.getRequestContext() != null){
			// Compruebo si el usuario es de tipo socio
			if(RequestContext.getRequestContext().getUserType() != 2){
				getUI().getNavigator().navigateTo(WebvaadinUI.MAINMENU);
			}
			
			Collection<Project> projects = ProjectController.getProjects();
			for(Project project : projects)
			{
				cboxProject.addItem(project.getId());
				cboxProject.setItemCaption(project.getId(), project.getName());
			}
			
			cleanInputs();
		}
	}
	
	void cleanInputs()
	{
		txtDescription.clear();
		txtAmount.clear();
		txtCode.clear();
		cboxProject.clear();
		
		txtDescription.setValidationVisible(false);
		txtAmount.setValidationVisible(false);
		txtCode.setValidationVisible(false);
		cboxProject.setValidationVisible(false);
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("501px");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("501px");
		
		// txtCode
		txtCode = new TextField();
		txtCode.setCaption("Codigo");
		txtCode.setImmediate(false);
		txtCode.setWidth("240px");
		txtCode.setHeight("-1px");
		txtCode.setRequired(true);
		mainLayout.addComponent(txtCode, "top:116.0px;left:0.0px;");
		
		// lblTitle
		lblTitle = new Label();
		lblTitle.setStyleName("titleLabel");
		lblTitle.setImmediate(false);
		lblTitle.setWidth("-1px");
		lblTitle.setHeight("-1px");
		lblTitle.setValue("Crear factura");
		mainLayout.addComponent(lblTitle, "top:42.0px;left:0.0px;");
		
		// popupDateFieldAppliedDate
		popupDateFieldAppliedDate = new PopupDateField();
		popupDateFieldAppliedDate.setCaption("Mes");
		popupDateFieldAppliedDate.setImmediate(false);
		popupDateFieldAppliedDate.setWidth("-1px");
		popupDateFieldAppliedDate.setHeight("-1px");
		popupDateFieldAppliedDate.setRequired(true);
		popupDateFieldAppliedDate.setDateFormat("MM-yyyy");
		popupDateFieldAppliedDate.setValue(new Date());
		popupDateFieldAppliedDate.setResolution(Resolution.MONTH);
		mainLayout.addComponent(popupDateFieldAppliedDate,
				"top:357.0px;left:0.0px;");
		
		// btnCreate
		btnCreate = new Button();
		btnCreate.setCaption("Crear");
		btnCreate.setImmediate(true);
		btnCreate.setWidth("120px");
		btnCreate.setHeight("-1px");
		mainLayout.addComponent(btnCreate, "top:420.0px;left:0.0px;");
		
		// btnCancel
		btnCancel = new Button();
		btnCancel.setCaption("Cancelar");
		btnCancel.setImmediate(true);
		btnCancel.setWidth("120px");
		btnCancel.setHeight("-1px");
		mainLayout.addComponent(btnCancel, "top:420.0px;left:140.0px;");
		
		// txtDescription
		txtDescription = new TextField();
		txtDescription.setCaption("Descripcion");
		txtDescription.setImmediate(false);
		txtDescription.setWidth("300px");
		txtDescription.setHeight("-1px");
		txtDescription.setRequired(true);
		mainLayout.addComponent(txtDescription, "top:176.0px;left:0.0px;");
		
		// txtAmount
		txtAmount = new TextField();
		txtAmount.setCaption("Monto");
		txtAmount.setImmediate(true);
		txtAmount.setWidth("240px");
		txtAmount.setHeight("-1px");
		txtAmount.setRequired(true);
		txtAmount.setNullRepresentation("");
		txtAmount.setConverter(new StringToDoubleConverter());
		mainLayout.addComponent(txtAmount, "top:236.0px;left:0.0px;");
		
		// cboxProject
		cboxProject = new ComboBox("Selecione un proyecto");
		cboxProject.setCaption("Proyecto");
		cboxProject.setImmediate(false);
		cboxProject.setWidth("240px");
		cboxProject.setHeight("-1px");
		cboxProject.setRequired(true);
		mainLayout.addComponent(cboxProject, "top:296.0px;left:0.0px;");
		
		return mainLayout;
	}
}
