package views;

import java.util.Collection;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItem;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.event.SelectionEvent;
import com.vaadin.event.SelectionEvent.SelectionListener;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Grid;
import com.vaadin.ui.Grid.SelectionMode;
import com.vaadin.ui.Label;

import controllers.UserController;
import entities.RequestContext;
import entities.User;

public class DeleteUsersView extends BaseView{

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Button btn_delete;
	@AutoGenerated
	private Label lblTitle;
	private Grid grid;
	private BeanItemContainer<User> container;
	
	public DeleteUsersView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		//buildGrid();
	}
	
	public void buildGrid()
	{
		Collection<User> users = UserController.GetUsers();

		container = new BeanItemContainer<User>(User.class, users);
		
		grid = new Grid(container);
		grid.removeColumn("id");
		grid.removeColumn("email");
		grid.removeColumn("userType");
		grid.setColumnOrder("name", "lastName", "userName");
		grid.getColumn("name").setHeaderCaption("Nombre");
		grid.getColumn("lastName").setHeaderCaption("Apellido");
		grid.getColumn("userName").setHeaderCaption("Usuario");
		grid.setWidth(100, Unit.PERCENTAGE);
		grid.setHeight(100, Unit.PERCENTAGE);
		grid.setSelectionMode(SelectionMode.SINGLE);
		grid.getSelectedRows().clear();
		mainLayout.addComponent(grid, "top:20%;left:0px;");
		
		grid.addSelectionListener(new SelectionListener() {

			@Override
			   public void select(SelectionEvent event) {
				btn_delete.setEnabled(
				         grid.getSelectedRows().size() > 0);
			   }
		});
		
		btn_delete.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				BeanItem<User> item = container.getItem(grid.getSelectedRow());
				
				UserController.DeleteUser(item.getBean().getId());
				grid.getContainerDataSource().removeItem(grid.getSelectedRow());
				
				btn_delete.setEnabled(false);
			}
		});
	}
	
	@Override
	public void enter(ViewChangeEvent event) {
		super.enter(event);
		if(RequestContext.getRequestContext() != null){
			buildGrid();
		}
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("700px");
		mainLayout.setHeight("501px");
		
		// top-level component properties
		setWidth("700px");
		setHeight("501px");
		
		// lblTitle
		lblTitle = new Label();
		lblTitle.setStyleName("titleLabel");
		lblTitle.setImmediate(false);
		lblTitle.setWidth("-1px");
		lblTitle.setHeight("-1px");
		lblTitle.setValue("Eliminar usuario");
		mainLayout.addComponent(lblTitle, "top:42.0px;left:0.0px;");
		
		// btn_delete
		btn_delete = new Button();
		btn_delete.setCaption("Eiminar usuario");
		btn_delete.setEnabled(false);
		btn_delete.setImmediate(true);
		btn_delete.setWidth("-1px");
		btn_delete.setHeight("-1px");
		mainLayout.addComponent(btn_delete, "top:50.0px;left:340.0px;");
		
		return mainLayout;
	}
}
