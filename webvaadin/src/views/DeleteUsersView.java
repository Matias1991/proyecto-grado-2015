package views;

import java.util.Collection;

import com.example.webvaadin.WebvaadinUI;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItem;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.event.SelectionEvent;
import com.vaadin.event.SelectionEvent.SelectionListener;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Grid;
import com.vaadin.ui.Grid.SelectionMode;

import controllers.UserController;
import entities.User;

public class DeleteUsersView extends CustomComponent implements View{

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Button button_1;
	private Grid grid;
	private BeanItemContainer<User> container;
	
	public DeleteUsersView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		buildGrid();
	}

	@Override
	public void enter(ViewChangeEvent event) {
		WebvaadinUI.changeToMainMenu();
		grid.getSelectedRows().clear();
		// Have some data
		Collection<User> users = UserController.GetUsers();
		// Have a container of some type to contain the data
		container = new BeanItemContainer<User>(User.class, users);
		grid.setContainerDataSource(container);
	}
	
	public void buildGrid()
	{
		// Have some data
		Collection<User> users = UserController.GetUsers();

		// Have a container of some type to contain the data
		container = new BeanItemContainer<User>(User.class, users);

		grid = new Grid(container);
		grid.setWidth(100, Unit.PERCENTAGE);
		grid.setHeight(100, Unit.PERCENTAGE);
		grid.setSelectionMode(SelectionMode.SINGLE);
		mainLayout.addComponent(grid, "top:30%;left:0px;");
		
		grid.addSelectionListener(new SelectionListener() {

			@Override
			   public void select(SelectionEvent event) {
				button_1.setEnabled(
				         grid.getSelectedRows().size() > 0);
			   }
		});
		
		button_1.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				// TODO Auto-generated method stub
				BeanItem<User> item = container.getItem(grid.getSelectedRow());
				
				UserController.DeleteUser(item.getBean().getId());
				grid.getContainerDataSource().removeItem(grid.getSelectedRow());
				
				button_1.setEnabled(false);
			}
		});
	}
	
	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("682px");
		mainLayout.setHeight("501px");
		
		// top-level component properties
		setWidth("682px");
		setHeight("501px");
		
		// button_1
		button_1 = new Button();
		button_1.setCaption("Delete User");
		button_1.setEnabled(false);
		button_1.setImmediate(true);
		button_1.setWidth("-1px");
		button_1.setHeight("-1px");
		mainLayout.addComponent(button_1, "top:80.0px;left:0.0px;");
		
		return mainLayout;
	}
}
