package views.project;

import java.util.Collection;

import org.vaadin.dialogs.ConfirmDialog;

import views.BaseView;

import com.example.webvaadin.WebvaadinUI;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.BeanItem;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.data.util.filter.SimpleStringFilter;
import com.vaadin.event.SelectionEvent;
import com.vaadin.event.FieldEvents.TextChangeEvent;
import com.vaadin.event.FieldEvents.TextChangeListener;
import com.vaadin.event.SelectionEvent.SelectionListener;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.TextField;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Grid;
import com.vaadin.ui.Grid.HeaderCell;
import com.vaadin.ui.Grid.HeaderRow;
import com.vaadin.ui.Grid.SelectionMode;
import com.vaadin.ui.Label;

import controllers.ProjectController;
import entities.Category;
import entities.Project;
import entities.RequestContext;

public class DeleteProjectView extends BaseView {

	private AbsoluteLayout mainLayout;
	private Label lblTitle;
	private Grid catalogProjectsGrid;
	private BeanItemContainer<Project> beanContainer;
	private Label lblMessage;
	private Button btnDelete;
	

	public DeleteProjectView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		lblMessage = new Label("");
		mainLayout.addComponent(lblMessage, "top:100.0px;left:0.0px;");

		btnDelete.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				btnDelete.setEnabled(false);

				ConfirmDialog.show(WebvaadinUI.getCurrent(), "Confirmación",
						"Desea cerrar el proyecto?", "Si", "No",
						new ConfirmDialog.Listener() {

							@Override
							public void onClose(ConfirmDialog confirm) {
								if (confirm.isConfirmed()) {
									BeanItem<Project> item = beanContainer
											.getItem(catalogProjectsGrid
													.getSelectedRow());

									if (ProjectController.deleteProject(item
											.getBean().getId())) {
										catalogProjectsGrid
												.getContainerDataSource()
												.removeItem(
														catalogProjectsGrid
																.getSelectedRow());
									}
									btnDelete.setEnabled(false);
								}
							}
						});
			}
		});
	}

	public void buildGrid() {
		// listo los proyectos abiertos
		Collection<Project> projects = ProjectController
				.getProjectsByStatus(false);

		if (projects != null && projects.size() > 0) {
			btnDelete.setVisible(true);
			beanContainer = new BeanItemContainer<Project>(Project.class,
					projects);

			catalogProjectsGrid = new Grid(beanContainer);
			catalogProjectsGrid.removeColumn("id");
			catalogProjectsGrid.removeColumn("manager");
			catalogProjectsGrid.removeColumn("seller");
			catalogProjectsGrid.removeColumn("createdDateTimeUTC");
			catalogProjectsGrid.removeColumn("updatedDateTimeUTC");
			catalogProjectsGrid.removeColumn("employedHours");
			catalogProjectsGrid.removeColumn("distributions");
			catalogProjectsGrid.removeColumn("projectPartners");
			catalogProjectsGrid.setColumnOrder("name", "description",
					"closedToShow", "createDateTimeUTCToShow");

			catalogProjectsGrid.getColumn("name").setHeaderCaption("Nombre");
			catalogProjectsGrid.getColumn("description").setHeaderCaption(
					"Descripción");
			catalogProjectsGrid.getColumn("closedToShow").setHeaderCaption(
					"Abierto");
			catalogProjectsGrid.getColumn("createDateTimeUTCToShow")
					.setHeaderCaption("Fecha creación");
			catalogProjectsGrid.setWidth(100, Unit.PERCENTAGE);
			catalogProjectsGrid.setHeight(100, Unit.PERCENTAGE);
			catalogProjectsGrid.setSelectionMode(SelectionMode.SINGLE);
			catalogProjectsGrid.getSelectedRows().clear();
			mainLayout.addComponent(catalogProjectsGrid, "top:20%;left:0px;");

			catalogProjectsGrid.addSelectionListener(new SelectionListener() {

				@Override
				public void select(SelectionEvent event) {
					btnDelete.setEnabled(catalogProjectsGrid.getSelectedRows()
							.size() > 0);
				}
			});
			// Filtros
			HeaderRow filterRow = catalogProjectsGrid.appendHeaderRow();

			for (final Object pid : catalogProjectsGrid
					.getContainerDataSource().getContainerPropertyIds()) {
				HeaderCell cell = filterRow.getCell(pid);
				if (cell != null) {
					TextField txtFilter = new TextField();
					txtFilter.setImmediate(true);
					txtFilter.setWidth("125px");
					txtFilter.setHeight("30px");
					txtFilter.setInputPrompt("Filtro");

					txtFilter.addTextChangeListener(new TextChangeListener() {
						@Override
						public void textChange(TextChangeEvent event) {
							String newValue = (String) event.getText();

							BeanItemContainer<Category> container = ((BeanItemContainer<Category>) catalogProjectsGrid
									.getContainerDataSource());

							container.removeContainerFilters(pid);
							if (null != newValue && !newValue.isEmpty()) {
								container
										.addContainerFilter(new SimpleStringFilter(
												pid, newValue, true, false));
							}
						}
					});
					cell.setComponent(txtFilter);
				}
			}

		} else {
			lblMessage.setValue("No hay proyectos para eliminar");
			btnDelete.setVisible(false);
		}
	}

	@Override
	public void enter(ViewChangeEvent event) {
		super.enter(event);
		if (RequestContext.getRequestContext() != null) {
			if (catalogProjectsGrid != null) {
				mainLayout.removeComponent(catalogProjectsGrid);
			}
			buildGrid();
		}

	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("880px");
		mainLayout.setHeight("501px");

		// top-level component properties
		setWidth("880px");
		setHeight("501px");

		// lblTitle
		lblTitle = new Label();
		lblTitle.setStyleName("titleLabel");
		lblTitle.setImmediate(false);
		lblTitle.setWidth("-1px");
		lblTitle.setHeight("-1px");
		lblTitle.setValue("Cerrar proyectos");
		mainLayout.addComponent(lblTitle, "top:42.0px;left:0.0px;");

		// btnDelete
		btnDelete = new Button();
		btnDelete.setCaption("Cerrar proyecto");
		btnDelete.setEnabled(false);
		btnDelete.setImmediate(true);
		btnDelete.setWidth("-1px");
		btnDelete.setHeight("-1px");
		mainLayout.addComponent(btnDelete, "top:50.0px;left:726.0px;");

		return mainLayout;
	}

}
