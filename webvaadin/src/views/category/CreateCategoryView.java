package views.category;

import servicelayer.service.ServiceWebStub.VOCategory;
import utils.PopupWindow;
import views.BaseView;

import com.example.webvaadin.WebvaadinUI;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.data.util.converter.StringToDoubleConverter;
import com.vaadin.data.validator.IntegerValidator;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Label;
import com.vaadin.ui.OptionGroup;
import com.vaadin.ui.TextField;

import controllers.CategoryController;
import entities.Category;

public class CreateCategoryView extends BaseView {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Button btnCancel;
	@AutoGenerated
	private Button btnCreate;
	@AutoGenerated
	private OptionGroup categoryType;
	@AutoGenerated
	private TextField txtAmount;
	@AutoGenerated
	private TextField txtDescription;
	@AutoGenerated
	private Label label_1;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public CreateCategoryView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		categoryType.addItems("Empresa", "Proyecto");
		categoryType.select("Empresa");
		
		btnCreate.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {

				txtDescription.setValidationVisible(true);
				txtAmount.setValidationVisible(true);
				
				if(!txtAmount.isValid() || !txtDescription.isValid()){
					txtAmount.setRequiredError("Es requerido");
					txtDescription.setRequiredError("Es requerido");
					txtAmount.setConversionError("Debe ser numérico");
				}else{
					Category category = new Category();
					category.setDescription(txtDescription.getValue());
					category.setAmount((Double)(txtAmount.getConvertedValue()));
					
					if (categoryType.getValue().equals("Empresa")) {
						category.setCategoryTypeId(1);
					} else if (categoryType.getValue().equals("Proyecto")) {
						category.setCategoryTypeId(2);
					}
					
					CategoryController.createCategory(category);
					
					PopupWindow popup = new PopupWindow("AVISO", "Rubro creado correctamente");
					
					txtDescription.clear();
					txtAmount.clear();
					
					txtDescription.setValidationVisible(false);
					txtAmount.setValidationVisible(false);
				}
			}
		});
		
		btnCancel.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				getUI().getNavigator().navigateTo(WebvaadinUI.MAINMENU);
			}
		});
		// TODO add user code here
	}

	@Override
	public void enter(ViewChangeEvent event) {
		super.enter(event);
	}
	
	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("360px");
		mainLayout.setHeight("501px");
		
		// top-level component properties
		setWidth("360px");
		setHeight("501px");
		
		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setWidth("-1px");
		label_1.setHeight("-1px");
		label_1.setValue("Crear rubro");
		label_1.setStyleName("titleLabel");
		mainLayout.addComponent(label_1, "top:42.0px;left:0.0px;");
		
		// txtDescription
		txtDescription = new TextField();
		txtDescription.setCaption("Descripción");
		txtDescription.setImmediate(true);
		txtDescription.setWidth("100.0%");
		txtDescription.setHeight("-1px");
		txtDescription.setTabIndex(1);
		txtDescription.setRequired(true);
		mainLayout.addComponent(txtDescription,
				"top:120.0px;right:112.0px;left:0.0px;");
		
		// txtAmount
		txtAmount = new TextField();
		txtAmount.setCaption("Monto");
		txtAmount.setImmediate(true);
		txtAmount.setWidth("100.0%");
		txtAmount.setHeight("-1px");
		txtAmount.setTabIndex(2);
		txtAmount.setRequired(true);
		txtAmount.setConverter(new StringToDoubleConverter());
		txtAmount.setNullRepresentation("");
		mainLayout.addComponent(txtAmount,
				"top:180.0px;right:112.0px;left:3.0px;");
		
		// categoryType
		categoryType = new OptionGroup();
		categoryType.setCaption("Asociado a");
		categoryType.setImmediate(false);
		categoryType.setWidth("-1px");
		categoryType.setHeight("-1px");
		txtAmount.setRequired(true);
		mainLayout.addComponent(categoryType, "top:260.0px;left:0.0px;");
		
		// btnCreate
		btnCreate = new Button();
		btnCreate.setCaption("Crear");
		btnCreate.setImmediate(false);
		btnCreate.setWidth("100.0%");
		btnCreate.setHeight("-1px");
		btnCreate.setTabIndex(3);
		mainLayout.addComponent(btnCreate,
				"top:354.0px;right:260.0px;left:0.0px;");
		
		// btnCancel
		btnCancel = new Button();
		btnCancel.setCaption("Cancelar");
		btnCancel.setImmediate(false);
		btnCancel.setWidth("100.0%");
		btnCancel.setHeight("-1px");
		btnCancel.setTabIndex(4);
		mainLayout.addComponent(btnCancel,
				"top:354.0px;right:140.0px;left:120.0px;");
		
		return mainLayout;
	}

}
