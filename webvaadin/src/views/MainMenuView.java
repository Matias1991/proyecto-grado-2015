package views;

import com.example.webvaadin.WebvaadinUI;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.View;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.MenuBar;
import com.vaadin.ui.Notification;
import com.vaadin.ui.MenuBar.MenuItem;

public class MainMenuView extends CustomComponent implements View {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private MenuBar mbarMainMenu;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public MainMenuView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
		/**
		 * Acciones al seleccionar un item en el menu
		 */
		MenuBar.Command command = new MenuBar.Command() {

			@Override
			public void menuSelected(MenuItem selectedItem) {
				// TODO Auto-generated method stub
				switch(selectedItem.getText()){
					case "Crear usuario":						
						getUI().getNavigator().navigateTo(WebvaadinUI.CREATEUSER);
					break;
					case "Modificar usuario":
						Notification.show(selectedItem.getText());
					break;
					case "Eliminar usuarios":
						Notification.show(selectedItem.getText());
					break;
					case "Catálogo usuarios":
						Notification.show(selectedItem.getText());
					break;
					case "Salir":
						getUI().getNavigator().navigateTo("");
					break;
				}					
			}
			
		};
		
		/**
		 * Carga del menu principal rol Administrador
		 */
		MenuItem users = mbarMainMenu.addItem("Usuarios",null,null);
		MenuItem createUser = users.addItem("Crear usuario",null,command);
		MenuItem updateUser = users.addItem("Modificar usuario",null,command);
		MenuItem deleteUser = users.addItem("Eliminar usuario", null,command);
		MenuItem getUsers = users.addItem("Catálogo usuarios", null,command);
		users.addSeparator();
		MenuItem exit = mbarMainMenu.addItem("Salir", null,command);
		
		
		
	}

	@Override
	public void enter(ViewChangeEvent event) {
		// TODO Auto-generated method stub
		WebvaadinUI.setTitle("Menu Principal");
		
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("120px");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("120px");
		
		// mbarMainMenu
		mbarMainMenu = new MenuBar();
		mbarMainMenu.setImmediate(false);
		mbarMainMenu.setWidth("100.0%");
		mbarMainMenu.setHeight("-1px");
		mainLayout.addComponent(mbarMainMenu, "top:17.0px;left:20.0px;");
		
		return mainLayout;
	}

}
