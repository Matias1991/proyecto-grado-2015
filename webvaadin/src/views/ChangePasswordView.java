package views;

import com.example.webvaadin.WebvaadinUI;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.ViewChangeListener.ViewChangeEvent;
import com.vaadin.server.Page;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.Button;
import com.vaadin.ui.Label;
import com.vaadin.ui.Notification;
import com.vaadin.ui.PasswordField;
import com.vaadin.ui.Button.ClickEvent;

import controllers.UserController;
import entities.RequestContext;

public class ChangePasswordView extends BaseView {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private Button btnCancel;
	@AutoGenerated
	private Button btnModify;
	@AutoGenerated
	private PasswordField newPassword;
	@AutoGenerated
	private PasswordField oldPassword;
	@AutoGenerated
	private Label lblTitle;
	private int idUser;


	public ChangePasswordView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
				
		btnModify.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				if(validateModifyUser()){
					UserController userController = new UserController();
					if(userController.changePassword(idUser, oldPassword.getValue(), newPassword.getValue())){
						Notification notif = new Notification ("Constraseña modificada correctamente", 
								Notification.TYPE_HUMANIZED_MESSAGE);
						notif.setDelayMsec(2000);
						notif.show(Page.getCurrent());
						//limpio los campos
						oldPassword.setValue("");
						newPassword.setValue("");
					}
				}
			}
		});
		
		btnCancel.addClickListener(new Button.ClickListener() {

			@Override
			public void buttonClick(ClickEvent event) {
				getUI().getNavigator().navigateTo(WebvaadinUI.MAINMENU);				
			}
		});
	}

	@Override
	public void enter(ViewChangeEvent event) {
		super.enter(event);
		if (RequestContext.getRequestContext() != null) {
			idUser = RequestContext.getRequestContext().getId();
		}
	}

	public boolean validateModifyUser() {
		boolean validate = true;
		String errors = "";
		
		String oldPasswordLabel = oldPassword.getValue();
		if (oldPasswordLabel.isEmpty()) {
			validate = false;
			errors += "Debes ingresar la contraseña actual\n";
		}

		String newPasswordLabel = newPassword.getValue();
		if (newPasswordLabel.isEmpty()) {
			validate = false;
			errors += "Debes ingresar la contraseña nueva\n";
		}
		
		if (!validate) {
			Notification notif = new Notification(errors,
					Notification.TYPE_ERROR_MESSAGE);
			notif.setDelayMsec(2000);
			notif.show(Page.getCurrent());
		}
		return validate;
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("682px");
		mainLayout.setHeight("570px");
		
		// top-level component properties
		setWidth("682px");
		setHeight("570px");
		
		// lblTitle
		lblTitle = new Label();
		lblTitle.setStyleName("titleLabel");
		lblTitle.setImmediate(false);
		lblTitle.setWidth("-1px");
		lblTitle.setHeight("-1px");
		lblTitle.setValue("Cambiar contraeña");
		mainLayout.addComponent(lblTitle, "top:42.0px;left:0.0px;");
		
		// oldPassword
		oldPassword = new PasswordField();
		oldPassword.setCaption("Contraseña actual");
		oldPassword.setImmediate(false);
		oldPassword.setWidth("240px");
		oldPassword.setHeight("-1px");
		oldPassword.setTabIndex(1);
		mainLayout.addComponent(oldPassword, "top:100.0px;left:0.0px;");
		
		// newPassword
		newPassword = new PasswordField();
		newPassword.setCaption("Contraseña nueva");
		newPassword.setImmediate(false);
		newPassword.setWidth("240px");
		newPassword.setHeight("-1px");
		newPassword.setTabIndex(2);
		mainLayout.addComponent(newPassword, "top:180.0px;left:0.0px;");
		
		// btnModify
		btnModify = new Button();
		btnModify.setCaption("Modificar");
		btnModify.setImmediate(true);
		btnModify.setWidth("-1px");
		btnModify.setHeight("-1px");
		btnModify.setTabIndex(3);
		mainLayout.addComponent(btnModify, "top:220.0px;left:0.0px;");
		
		// btnCancel
		btnCancel = new Button();
		btnCancel.setCaption("Cancelar");
		btnCancel.setImmediate(true);
		btnCancel.setWidth("-1px");
		btnCancel.setHeight("-1px");
		btnCancel.setTabIndex(4);
		mainLayout.addComponent(btnCancel, "top:220.0px;left:164.0px;");
		
		return mainLayout;
	}
}
